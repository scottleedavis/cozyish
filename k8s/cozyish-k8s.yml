apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: api
  name: api
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: api
    spec:
      containers:
      - env:
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        - name: MINIO
          value: minio:9000
        - name: MINIO_ACCESS_KEY
          value: minioaccesskey
        - name: MINIO_SECRET_KEY
          value: miniosecretkey
        - name: RABBITMQ
          value: rabbitmq:5672
        image: scottleedavis/cozyish-api:latest
        name: api
        ports:
        - containerPort: 8000
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: api
  name: api
spec:
  ports:
  - name: "8000"
    port: 8000
    targetPort: 8000
  selector:
    io.kompose.service: api
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: cache
  name: cache
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: cache
    spec:
      containers:
      - env:
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        - name: RABBITMQ
          value: rabbitmq:5672
        image: scottleedavis/cozyish-cache:latest
        name: cache
        ports:
        - containerPort: 8004
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: cache
  name: cache
spec:
  ports:
  - name: "8004"
    port: 8004
    targetPort: 8004
  selector:
    io.kompose.service: cache
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: classify
  name: classify
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: classify
    spec:
      containers:
      - env:
        - name: DEEPDETECT
          value: deepdetect:8080
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        - name: MINIO
          value: minio:9000
        - name: MINIO_ACCESS_KEY
          value: minioaccesskey
        - name: MINIO_SECRET_KEY
          value: miniosecretkey
        - name: NSFWAPI
          value: nsfw_api:5000
        - name: RABBITMQ
          value: rabbitmq:5672
        image: scottleedavis/cozyish-classify:latest
        name: classify
        ports:
        - containerPort: 8003
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: classify
  name: classify
spec:
  ports:
  - name: "8003"
    port: 8003
    targetPort: 8003
  selector:
    io.kompose.service: classify
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: crawler
  name: crawler
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: crawler
    spec:
      containers:
      - env:
        - name: API
          value: api:8000
        image: scottleedavis/cozyish-crawler:latest
        name: crawler
        ports:
        - containerPort: 4444
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: crawler
  name: crawler
spec:
  ports:
  - name: "4444"
    port: 4444
    targetPort: 4444
  selector:
    io.kompose.service: crawler
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: deepdetect-claim0
  name: deepdetect-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: deepdetect
  name: deepdetect
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: deepdetect
    spec:
      containers:
      - image: jolibrain/deepdetect_cpu
        name: deepdetect
        ports:
        - containerPort: 8080
        resources: {}
        volumeMounts:
        - mountPath: /opt/models/
          name: deepdetect-claim0
      restartPolicy: Always
      volumes:
      - name: deepdetect-claim0
        persistentVolumeClaim:
          claimName: deepdetect-claim0
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: deepdetect
  name: deepdetect
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    io.kompose.service: deepdetect
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: elasticsearch
    spec:
      containers:
      - env:
        - name: ES_JAVA_OPTS
          value: -Xms512m -Xmx512m
        - name: discovery.type
          value: single-node
        image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
        name: elasticsearch
        ports:
        - containerPort: 9200
        - containerPort: 9300
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  ports:
  - name: "9200"
    port: 9200
    targetPort: 9200
  - name: "9300"
    port: 9300
    targetPort: 9300
  selector:
    io.kompose.service: elasticsearch
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: extract
  name: extract
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: extract
    spec:
      containers:
      - env:
        - name: ELASTICSEARCH_URL
          value: http://elasticsearch:9200
        - name: MINIO
          value: minio:9000
        - name: RABBITMQ
          value: rabbitmq:5672
        image: scottleedavis/cozyish-extract:latest
        name: extract
        ports:
        - containerPort: 8002
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: extract
  name: extract
spec:
  ports:
  - name: "8002"
    port: 8002
    targetPort: 8002
  selector:
    io.kompose.service: extract
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: minio
  name: minio
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: minio
    spec:
      containers:
      - args:
        - server
        - /data
        env:
        - name: MINIO_ACCESS_KEY
          value: minioaccesskey
        - name: MINIO_SECRET_KEY
          value: miniosecretkey
        - name: MINIO_SSE_MASTER_KEY
          value: my-minio-key:6368616e676520746869732070617373776f726420746f206120736563726574
        image: minio/minio:RELEASE.2019-10-02T21-19-38Z
        name: minio
        ports:
        - containerPort: 9000
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: minio
  name: minio
spec:
  ports:
  - name: "9000"
    port: 9000
    targetPort: 9000
  selector:
    io.kompose.service: minio
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: nsfw-api
  name: nsfw-api
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: nsfw-api
    spec:
      containers:
      - env:
        - name: PORT
          value: "5000"
        image: eugencepoi/nsfw_api:latest
        name: nsfw-api
        ports:
        - containerPort: 5000
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: nsfw-api
  name: nsfw-api
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    io.kompose.service: nsfw-api
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq
    spec:
      containers:
      - env:
        - name: RABBITMQ_PASSWORD
          value: bitnami
        - name: RABBITMQ_USERNAME
          value: user
        image: bitnami/rabbitmq:3.7
        name: rabbitmq
        ports:
        - containerPort: 4369
        - containerPort: 5672
        - containerPort: 25672
        - containerPort: 15672
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  ports:
  - name: "4369"
    port: 4369
    targetPort: 4369
  - name: "5672"
    port: 5672
    targetPort: 5672
  - name: "25672"
    port: 25672
    targetPort: 25672
  - name: "15672"
    port: 15672
    targetPort: 15672
  selector:
    io.kompose.service: rabbitmq
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: store
  name: store
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: store
    spec:
      containers:
      - env:
        - name: MINIO
          value: minio:9000
        - name: MINIO_ACCESS_KEY
          value: minioaccesskey
        - name: MINIO_SECRET_KEY
          value: miniosecretkey
        - name: RABBITMQ
          value: rabbitmq:5672
        image: scottleedavis/cozyish-store:latest
        name: store
        ports:
        - containerPort: 8001
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: store
  name: store
spec:
  ports:
  - name: "8001"
    port: 8001
    targetPort: 8001
  selector:
    io.kompose.service: store
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: ui
  name: ui
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: ui
    spec:
      containers:
      - image: scottleedavis/cozyish-ui:latest
        name: ui
        ports:
        - containerPort: 8080
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: ui
  name: ui
spec:
  ports:
  - name: "7777"
    port: 7777
    targetPort: 8080
  selector:
    io.kompose.service: ui
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: video
  name: video
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: video
    spec:
      containers:
      - env:
        - name: API
          value: api:8000
        - name: VIDEO
          value: video:3000
        image: scottleedavis/cozyish-video:latest
        name: video
        ports:
        - containerPort: 3000
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.18.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: video
  name: video
spec:
  ports:
  - name: "3000"
    port: 3000
    targetPort: 3000
  selector:
    io.kompose.service: video
status:
  loadBalancer: {}
---
